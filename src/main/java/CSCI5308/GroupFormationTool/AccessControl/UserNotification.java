package CSCI5308.GroupFormationTool.AccessControl;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import java.util.Properties;

public class UserNotification implements IUserNotifications {
	private Logger logger = LoggerFactory.getLogger(this.getClass());

	@Override
	public boolean sendUserLoginCredentials(User user, String rawPassword) {
		String mailBody = String
				.format("Hi,\n\nPlease find below your login credentials to access Group Formation portal: \n"
						+ "Username: %s\nPassword:%s\n\n\nRegards,\nGroup 24", user.getBannerID(), rawPassword);

		logger.info(
				"Sending the user credentials for accessing the Group Formation Portal!! It has the bannerID and Password associated to it.");
		return sendMail("Login Credential for accessing Group Formation portal", mailBody, user.getEmail());
	}

	private boolean sendMail(String subject, String body, String to) {
		INotificationConfig notificationConfig = AccessControlConfig.instance().getDefaultNotificationConfig();
		String from = notificationConfig.getFrom();
		logger.info("Fetching the mail ID from which the forgot password mail is sent");
		String host = notificationConfig.getHost();
		logger.info("Fetching the mail ID to which the mail is sent");
		Properties properties = System.getProperties();
		logger.info("Retrieving the system properties");
		properties.put("mail.smtp.starttls.enable", "true");
		logger.info("Enabling the smpt service");
		properties.setProperty("mail.smtp.host", host);
		properties.setProperty("mail.smtp.port", "587");
		properties.setProperty("mail.smtp.auth", "true");
		logger.info("Setting the properties like host, port and authorization");
		Session session = Session.getInstance(properties, new javax.mail.Authenticator() {
			protected PasswordAuthentication getPasswordAuthentication() {
				return new PasswordAuthentication(from, notificationConfig.getPassword());
			}
		});
		logger.info("Getting the session information using Session Management Service");
		try {
			MimeMessage message = new MimeMessage(session);
			message.setFrom(new InternetAddress(from));
			message.addRecipient(Message.RecipientType.TO, new InternetAddress(to));
			message.setSubject(subject);
			message.setText(body);
			logger.info("Creating an autogenerated mail with From, Recipient, Subject and Body of the mail");
			Transport.send(message);
			logger.info("The Auto-generated mail is transported to the recipient");
		} catch (Exception e) {
			logger.error("SMPT Service is not working");
			logger.info("Error Message : {}", e.getMessage());
		}
		return true;
	}
}